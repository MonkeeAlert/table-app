{"version":3,"sources":["svg/table.svg","svg/grid.svg","svg/ascending.svg","svg/descending.svg","svg/done.svg","svg/not-done.svg","svg/forbidden.svg","utils/functions.js","components/Table/Table.jsx","redux/actions.js","components/Table/LoadMore.jsx","components/Empty/Empty.jsx","App.jsx","components/Header/Logo.jsx","components/Header/LanguageSelect.jsx","components/Header/FilterBy.jsx","components/Header/OrderBy.jsx","components/Header/Filters.jsx","components/Header/View.jsx","components/Header/Header.jsx","serviceWorker.js","redux/store.js","redux/reducers.js","index.js"],"names":["module","exports","filters","order","key","icon","Asc","status","Done","Desc","NotDone","layouts","Table","Grid","l18n","lang","phrases","logo","table","grid","id","title","userId","completed","done","notDone","byDone","byNotDone","asc","desc","loadMore","empty","screens","compareStrings","toCompareA","toCompareB","slice","indexOf","localeCompare","sortBy","data","criteria","sort","a","b","trim","toLowerCase","Error","getTranslation","str","res","filter","l","getWindowSize","w","window","innerWidth","h","innerHeight","connect","state","current","view","store","getState","language","filterBy","orderBy","className","map","k","updateCurrent","payload","type","LoadMore","dispatch","initialStep","step","length","onClick","_","currentIds","c","arr","d","includes","Empty","src","Forbidden","alt","App","useStore","useDispatch","fetch","then","response","json","Object","values","Logo","href","rel","LanguageSelect","select","useRef","ref","onChange","children","selectedIndex","value","name","FilterBy","f","checked","OrderBy","useState","width","setWidth","useEffect","addEventListener","o","isFalsy","Filters","View","Header","Boolean","location","hostname","match","initialState","createStore","undefined","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4427216f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/table.3274f879.svg\";","module.exports = __webpack_public_path__ + \"static/media/grid.956b42da.svg\";","module.exports = __webpack_public_path__ + \"static/media/ascending.2e617e17.svg\";","module.exports = __webpack_public_path__ + \"static/media/descending.9abd6ee1.svg\";","module.exports = __webpack_public_path__ + \"static/media/done.0fb99c76.svg\";","module.exports = __webpack_public_path__ + \"static/media/not-done.aeec2863.svg\";","module.exports = __webpack_public_path__ + \"static/media/forbidden.d064fad2.svg\";","import Table from '../svg/table.svg';\nimport Grid from '../svg/grid.svg';\nimport Asc from '../svg/ascending.svg';\nimport Desc from '../svg/descending.svg';\nimport Done from '../svg/done.svg';\nimport NotDone from '../svg/not-done.svg';\n\nexport const filters = [ 'id', 'userId', 'title', 'completed' ];\nexport const order = [ \n  {\n    key: 'asc',\n    icon: Asc,\n    status: {\n      key  : 'Done',\n      icon : Done \n    }\n  }, \n  {\n    key: 'desc',\n    icon: Desc,\n    status: {\n      key  : 'NotDone',\n      icon : NotDone \n    }\n  } \n];\n\nexport const layouts = [ \n  { \n    key : 'table', \n    icon : Table\n  }, \n  { \n    key : 'grid',\n    icon : Grid\n  } \n];\n\nexport const l18n = [\n  { \n    key: 'ru', \n    lang: 'Русский', \n    phrases: {\n      logo      : 'Приложение таблицы',\n      table     : 'Таблица',\n      grid      : 'Карточки',\n      id        : 'ID',\n      title     : 'Заголовок',\n      userId    : 'Номер пользователя',\n      completed : 'Статус',\n      done      : 'Сделано',\n      notDone   : 'Не сделано',\n      byDone    : 'По сделанным',\n      byNotDone : 'По несделанным',\n      asc       : 'По возрастанию',\n      desc      : 'По убыванию',\n      loadMore  : 'Показать ещё',\n      empty     : 'Данные отсутствуют'\n    }\n  },\n  { \n    key: 'en', \n    lang: 'English', \n    phrases: {\n      logo      : 'Table app',\n      table     : 'Table',\n      grid      : 'Grid',\n      id        : 'ID',\n      title     : 'Title',\n      userId    : 'User ID',\n      completed : 'Status',\n      done      : 'Done',\n      notDone   : 'Not done',\n      asc       : 'Ascending',\n      byDone    : 'By done',\n      byNotDone : 'By not done',\n      desc      : 'Descending',\n      loadMore  : 'Load more',\n      empty     : 'No data'\n    }\n  }\n];\n\nexport const screens = {\n  tablet: 1117,\n  // mobile: 790\n}\n \nconst compareStrings = ( toCompareA, toCompareB ) => {\n  return toCompareA.slice(0, toCompareA.indexOf(' ')).localeCompare(toCompareB);\n}\n\nexport function sortBy( data, criteria, order = 'asc' ) {\n  return data.sort( (a, b) => {\n    if(order.trim().toLowerCase() === 'asc') {\n      if(criteria === 'title' ) return compareStrings(a[criteria], b[criteria]);\n      return a[criteria] - b[criteria];\n    }\n    else if(order.trim().toLowerCase() === 'desc') {\n      if(criteria === 'title' ) return compareStrings(b[criteria], a[criteria]);\n      return b[criteria] - a[criteria];\n    }\n    else throw new Error('incorrect type of order');\n  });\n}\n\nexport function getPhone( str ) {\n  return str.slice(0, str.indexOf(' ')).split('.').join('-')\n}\n\nexport function getTranslation( lang, str ) {\n  const res = l18n.filter( l => l.key === lang )[0].phrases[str];\n\n  if(!res) throw new Error('ERROR: String is undefined');\n  return res;\n}\n\nexport function getWindowSize() {\n  return { w: window.innerWidth, h: window.innerHeight}\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { sortBy, getTranslation } from '../../utils/functions';\n\nconst mapStateToProps = state => (\n  { \n    current : [ ...state.current ],\n    view : state.view\n  }\n);\n\nexport const Table = connect(mapStateToProps)(\n  ({ store }) => {\n    const { view, language, current, filterBy, orderBy } = store.getState();\n\n    const data = sortBy(current, filterBy, orderBy);\n\n    return(\n      <ul className={`list table${ view === 'grid' ? '--grid' : ''}`}>\n        {\n          data.map( (l, k) => {\n            const { id, userId, title, completed } = l;\n\n            return(\n              <li key={id} className=\"table__row\">\n                <div className=\"table__block table__block--id text--left\">\n                  <p className=\"text text--reg text--grey table__text--small\">#{id} / @{userId}</p>\n                </div>\n\n                <div className=\"table__block table__block--title text--left\">\n                  <p className=\"text text--header text--graphite table__name table__text--large\">{title}</p>\n                </div>\n\n                <div className={`table__block table__block--status table__block--status-${ completed ? 'green' : 'red' } text--right`}>\n                  <p className={`text text--reg text--${ completed ? 'green' : 'red' } table__text--small`}>\n                    { getTranslation( language, completed ? 'done' : 'notDone') }\n                  </p>\n                </div>\n              </li>\n            )\n          })\n        }\n      </ul>\n    )\n  }\n)","export const getData = payload => ({ type: 'GET_DATA', payload });\n\nexport const setFilter = payload => ({ type: 'SET_FILTER', payload });\n\nexport const setOrder = payload => ({ type: 'SET_ORDER', payload });\n\nexport const setView = payload => ({ type: 'SET_VIEW', payload });\n\nexport const updateCurrent = payload => ({ type: 'UPDATE_CURRENT', payload });\n\nexport const changeLanguage = payload => ({ type: 'CHANGE_LANGUAGE', payload });\n\n// export const toggleFavourite = payload => ({ type: 'TOGGLE_FAVOURITE', payload })","import React from 'react';\nimport { connect } from 'react-redux';\nimport { updateCurrent } from '../../redux/actions';\nimport { getTranslation } from '../../utils/functions';\n\nconst mapStateToProps = state => ({ data: [ ...state.data ], current: [ ...state.current ] })\n\nexport const LoadMore = connect(mapStateToProps)(\n  ({ store, dispatch, initialStep }) => {\n    const { data, current, language } = store.getState();\n\n    const step = data.length - current.length <= initialStep ? data.length - current.length : initialStep;\n\n    const loadMore = _ => {\n      const currentIds = current.map( c => c.id);\n\n      const arr = data.filter( d => !currentIds.includes(d.id) ).filter( (_, k) => k < initialStep);\n      dispatch( updateCurrent([...current, ...arr]) );\n    }\n  \n    if( step <= 0) return null;\n\n    return (\n      <button \n        className=\"button button--blue button--load-more\"\n        onClick={ loadMore }\n      >\n        { `${ getTranslation( language, 'loadMore' ) } ${step}` }\n      </button>\n    )\n  }\n)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getTranslation } from '../../utils/functions';\nimport Forbidden from '../../svg/forbidden.svg';\n\nconst mapStateToProps = state => ({ language : state.language });\n\nexport const Empty = connect(mapStateToProps)(\n  ({ store }) => ( \n    <section className=\"app__empty\">\n      <img src={Forbidden} alt=\"NoData\" className=\"app__empty-image\"/>\n      <p className=\"text text--header text--center text--grey app__empty-text\">\n        { getTranslation(store.getState().language, 'empty') }\n      </p>\n    </section>\n  )\n) ","import React from 'react';\nimport { useStore, useDispatch } from 'react-redux';\nimport { Table } from './components/Table/Table';\nimport { LoadMore } from './components/Table/LoadMore';\nimport { Empty } from './components/Empty/Empty';\nimport { getData, updateCurrent } from './redux/actions';\nimport { sortBy } from './utils/functions';\n\nimport './scss/main.scss';\n\n// todo (milestones):\n// 1. tests\n// 2. js ~~~> ts\n\nconst App = _ => {\n  const store = useStore();\n  const dispatch = useDispatch();\n\n  const { filterBy, orderBy } = store.getState();\n\n  fetch('https://jsonplaceholder.typicode.com/to2dos')\n    .then( response => response.json() )\n    .then( data => {\n      // console.log(data);\n      const d = Object.values(data).length > 0 ? sortBy(data, filterBy, orderBy) : [] ;\n      dispatch( getData(d) );\n    } )\n    .then( _ => {\n      const { data } = store.getState();\n      \n      if(data.length > 0) {\n        const slice = data.slice(0, 5);\n        dispatch( updateCurrent( slice ) );\n      }\n    } );\n\n  return (\n    <main className=\"app__main\">\n      {\n        store.getState().data.length > 0 ? (\n          <>\n            <Table store={store} dispatch={dispatch} />\n            <LoadMore store={store} dispatch={dispatch} initialStep={10} />\n          </>\n        ) : (\n          <Empty store={store} />\n        )\n      }\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getTranslation } from '../../utils/functions';\n\nconst mapStateToProps = state => ({ language : state.language })\n\nexport const Logo = connect(mapStateToProps)(\n  ({ store })  => ( \n    <a \n      href=\"/\" \n      rel=\"noopener noreferrer\" \n      className=\"text--link text--header text--graphite header__text--logo\"\n    >\n      { getTranslation( store.getState().language, 'logo' ) }\n    </a> \n  )\n)","import React, { useRef } from 'react';\nimport { changeLanguage } from '../../redux/actions';\nimport { l18n } from '../../utils/functions';\n\nexport const LanguageSelect = ({ dispatch }) => {\n  const select = useRef();\n  const handleSelect = _ => dispatch( changeLanguage(select.current.children[select.current.selectedIndex].value) );\n\n  return(\n    <select \n      ref={select} \n      onChange={ handleSelect } \n      name=\"lanuage\" \n      id=\"language\" \n      className=\"header__language\"\n    >\n      { \n        l18n.map( l => (\n          <option key={l.key} value={l.key} className=\"header__language-option\">{l.lang}</option>\n        )) \n      }\n    </select>\n  )\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setFilter } from '../../redux/actions';\nimport { getTranslation, filters } from '../../utils/functions';\n\nconst mapStateToProps = state => ({ ...state, filterBy: state.filterBy });\n\nexport const FilterBy = connect(mapStateToProps)(\n  ({ store, dispatch }) => {\n    const { language, filterBy } = store.getState();\n\n    const handleChange = criteria => dispatch( setFilter( criteria ) );\n  \n    return(\n      <ul className=\"list header__filter-list\">\n        {\n          filters.map( (f, k) => (\n            <li key={k} className=\"header__filter-list-item\">\n              <input \n                type=\"radio\" \n                name=\"filter_by\" \n                checked={ filterBy === f ? true : false} \n                className=\"header__filter-input\"\n                onChange={ _ => handleChange(f) }\n              />\n              <span className=\"header__filter-list-title\">\n                { getTranslation( language, f ) }\n              </span>\n            </li>\n          ))\n        }\n      </ul>\n    ) \n  }\n);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setOrder } from '../../redux/actions';\nimport { getTranslation, order, screens, getWindowSize } from '../../utils/functions';\n\nconst mapStateToProps = state => ({ ...state, orderBy: state.orderBy });\n\nexport const OrderBy = connect(mapStateToProps)(\n  ({ store, dispatch }) => {\n    const [ width, setWidth ] = useState( getWindowSize().w );\n    const { language, orderBy, filterBy } = store.getState();\n    \n    useEffect( _ => {\n      window.addEventListener('resize', _ => {\n        setWidth( getWindowSize().w )\n      })\n    });\n\n    return(\n      <ul className=\"list header__filter-list\">\n        {\n          order.map( (o, k) => {\n            const { key, icon, status } = o;\n            const isFalsy = k % 2 !== 0;\n\n            return(\n              <li key={k} className=\"header__filter-list-item\">\n              <input \n                type=\"radio\" \n                name=\"order_by\" \n                checked={ orderBy === key ? true : false}\n                onChange={ _ => dispatch( setOrder(key) ) }\n                className=\"header__filter-input\"\n              />\n              <span className=\"header__filter-list-title\">\n                { \n                  width > screens.tablet ?\n                    getTranslation( \n                      language, \n                      filterBy !== 'completed' ? \n                        key : isFalsy ? \n                          'byDone' : 'byNotDone' \n                    ) :\n                    filterBy !== 'completed' ?\n                      <img src={icon} alt={key} className=\"header__filter-icon\" /> : \n                      <img src={status.icon} alt={status.key} className=\"header__filter-icon\"/>\n                }\n              </span>\n            </li>\n            )\n          })\n        }\n      </ul>\n    )\n  }\n);","import React from 'react';\n// import { useStore, useDispatch } from 'react-redux';\nimport { FilterBy } from './FilterBy';\nimport { OrderBy } from './OrderBy';\n\nexport const Filters = ({ store, dispatch }) => {\n\n  return(\n    <section className=\"header__filter\">\n      <FilterBy store={store} dispatch={dispatch} />\n      <OrderBy store={store} dispatch={dispatch} />\n    </section>\n  )\n} ","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setView } from '../../redux/actions';\nimport { layouts, getTranslation, screens, getWindowSize } from '../../utils/functions'\n\nconst mapStateToProps = state => ({ view : state.view, language : state.language });\n\nexport const View = connect(mapStateToProps)( \n  ({ store, dispatch }) => {\n    const [ width, setWidth ] = useState( getWindowSize().w );\n    const { view, language } = store.getState();\n    \n    useEffect( _ => {\n      window.addEventListener('resize', _ => {\n        setWidth( getWindowSize().w )\n      })\n    });\n\n    return(\n      <section className=\"header__view\">\n        <ul className=\"list header__filter-list\">\n          {\n            layouts.map( (l, k) => {\n              const { key, icon } = l;\n              \n              return(\n                <li key={k} className=\"header__filter-list-item\">\n                  <input \n                    type=\"radio\" \n                    name=\"view\" \n                    className=\"header__filter-input\"\n                    checked={ view === key ? true : false }\n                    onChange={ _ => dispatch( setView(key) )}\n                  />\n                  <span className=\"header__filter-list-title\">\n                    { \n                      width > screens.tablet ? \n                        getTranslation( language, key ) : <img src={icon} alt={key} className=\"header__filter-icon\" />\n                    }\n                  </span>\n                </li>\n              )\n            })\n          }\n        </ul>\n      </section>\n    )\n  } \n)","import React from 'react';\nimport { useStore, useDispatch } from 'react-redux';\n\nimport { Logo } from './Logo';\nimport { LanguageSelect } from './LanguageSelect';\nimport { Filters } from './Filters';\nimport { View } from './View';\n\nconst Header = _ => {\n  const store = useStore();\n  const dispatch = useDispatch();\n\n  return(\n    <header className=\"app__header\">\n      <div className=\"header__row\">\n        <Logo store={store} />\n        <LanguageSelect dispatch={dispatch} />\n      </div>\n      <div className=\"header__row header__row--filters\">\n        <Filters store={store} dispatch={dispatch} />\n        <View store={store} dispatch={dispatch} />\n      </div>\n    </header>\n  )\n}\n\nexport default Header;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore } from 'redux';\nimport { rootReducer } from './reducers';\nimport { l18n } from '../utils/functions';\n\nexport const initialState = {\n  data: [],\n  current: [],\n  filterBy: 'id',\n  orderBy: 'asc',\n  view: 'table',\n  language: l18n[0].key\n}\n\nexport const store = createStore(\n  rootReducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n); ","export const rootReducer = ( state, { type, payload }) => {\n  switch(type) {\n    case 'GET_DATA':\n      if(payload === undefined) return;\n      \n      return { \n        ...state, \n        data : [ ...payload ] \n      };\n\n    case 'UPDATE_CURRENT':\n      if(payload === undefined) return;  \n    \n      return { \n        ...state, \n        current : [ ...payload ] \n      };\n    \n    case 'SET_FILTER':\n      if(payload === undefined) return;  \n    \n      return { \n        ...state, \n        filterBy : payload \n      };\n\n    case 'SET_ORDER':\n      if(payload === undefined) return;  \n    \n      return { \n        ...state, \n        orderBy : payload \n      };\n\n    case 'SET_VIEW':\n      if(payload === undefined) return;  \n    \n      return { \n        ...state, \n        view : payload \n      };\n  \n    case 'CHANGE_LANGUAGE':\n      if(payload === undefined) return;  \n    \n      return { \n        ...state, \n        language : payload \n      };\n\n    default: return { ...state };\n  }\n}","// import 'react-app-polyfill/ie11';\n// import 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App.jsx';\nimport Header from './components/Header/Header.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Header />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}